{"ast":null,"code":"import products from '../data/Products';\nimport _categories from '../data/Categories';\nexport default {\n  components: {},\n  props: ['categoryId'],\n  computed: {\n    /*\n      filterRangePrice() {\n        const prods = products;\n        // prods.sort((a, b) => a.price - b.price);\n        const startPrice = Math.floor(prods[0].price);\n        const endPrice = Math.ceil(prods[prods.length - 1].price);\n        const range = [];\n        const numberDigit = String(endPrice - startPrice).length;\n        let step = (endPrice - startPrice) / 10;\n        step /= (10 ** (numberDigit - 2));\n        step = Math.round(step * (10 ** (numberDigit - 2)));\n        let val = startPrice;\n        while (val < endPrice) {\n          range.push(val);\n          val += step;\n        }\n        range.push(endPrice);\n         return range;\n      },\n      */\n    categories: function categories() {\n      return _categories;\n    }\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,QAAP,MAAqB,kBAArB;AACA,OAAOC,WAAP,MAAuB,oBAAvB;AAEA,eAAe;EACbC,UAAU,EAAE,EADC;EAIbC,KAAK,EAAE,CAAC,YAAD,CAJM;EAKbC,QAAQ,EAAE;IACV;;;;;;;;;;;;;;;;;;;;IAqBEH,UAtBQ,wBAsBK;MACX,OAAOA,WAAP;IACD;EAxBO;AALG,CAAf","names":["products","categories","components","props","computed"],"sourceRoot":"","sources":["C:\\Projects\\vue\\my_store\\src\\components\\ProductSearch.vue"],"sourcesContent":["<template>\n<div class=\"box search\">\n  <h2>Search by <span></span></h2>\n  <div class=\"box-content\">\n    <form action=\"#\"  method=\"post\">\n      Keyword\n      <input class=\"field\" />\n      Category\n      <select class=\"field\" :value=\"categoryId\">\n        <option :value=\"category.id\" v-for=\"category in categories\" :key=\"category.id\">\n          {{category.title}}\n        </option>\n      </select>\n      <div class=\"inline-field\">\n        Price\n        <select class=\"field small-field\" :value=\"filterRangePrice[0]\">\n          <option :value=\"price\" v-for=\"price in filterRangePrice\" :key=\"'priceFrom:' + price\">\n            ${{price}}\n          </option>\n        </select>\n        to:\n        <select class=\"field small-field\" :value=\"filterRangePrice[filterRangePrice.length - 1]\">\n          <option :value=\"price\" v-for=\"price in filterRangePrice\" :key=\"'priceTo' + price\">\n            ${{price}}\n          </option>\n        </select>\n      </div>\n      <input type=\"submit\" class=\"search-submit\" value=\"Search\" />\n      <p> <a href=\"#\" class=\"bul\">Advanced search</a><br />\n        <a href=\"#\" class=\"bul\">Contact Customer Support</a> </p>\n    </form>\n  </div>\n</div>\n</template>\n\n<script>\nimport products from '../data/Products';\nimport categories from '../data/Categories';\n\nexport default {\n  components: {\n\n  },\n  props: ['categoryId'],\n  computed: {\n  /*\n    filterRangePrice() {\n      const prods = products;\n      // prods.sort((a, b) => a.price - b.price);\n      const startPrice = Math.floor(prods[0].price);\n      const endPrice = Math.ceil(prods[prods.length - 1].price);\n      const range = [];\n      const numberDigit = String(endPrice - startPrice).length;\n      let step = (endPrice - startPrice) / 10;\n      step /= (10 ** (numberDigit - 2));\n      step = Math.round(step * (10 ** (numberDigit - 2)));\n      let val = startPrice;\n      while (val < endPrice) {\n        range.push(val);\n        val += step;\n      }\n      range.push(endPrice);\n\n      return range;\n    },\n    */\n    categories() {\n      return categories;\n    },\n  },\n};\n</script>\n\n<style lang=\"stylus\">\n.search { min-height:252px;}\n.search label { display:block; padding-bottom:3px; }\n\n.search .field { display:block; margin-bottom:10px; }\n.search .inline-field label { display:inline; padding:0; }\n.search .inline-field .field { display:inline; margin:0; }\n.search input.field { width:206px; }\n.search select.field { width:212px; }\n.search select.small-field { width:60px; }\n\n.search-submit {\n  width:70px; background:#8b0000; border:0; color:#fff; height:27px;\n  display:block; line-height:26px; cursor:pointer; margin:12px 0 10px 0;}\n\n.field { background:#ebebeb; border:solid 1px #dedede; padding:2px;}\n</style>\n"]},"metadata":{},"sourceType":"module"}